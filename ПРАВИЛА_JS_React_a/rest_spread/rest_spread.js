/*
Rest-параметр собирает несколько аргументов в массив (используется в определении функции).
Spread-оператор распаковывает массив или объект в отдельные элементы (используется при вызове функции или в других операциях).

...args используется как rest-параметр, чтобы собрать все переданные аргументы функции memoizedPow в массив args.
 */
function printArgs(...args) {
  console.log(args); // [1, 2, 3] - Выводим массив всех переданных аргументов
}

printArgs(1, 2, 3); // [1, 2, 3]
printArgs('Hello', true, { key: 'value' }); // ['Hello', true, { key: 'value' }]
// Здесь, независимо от количества аргументов, ...args упакует их в массив.

// Зачем нужен ...args?
// Гибкость: Позволяет функции принимать любое количество аргументов.
// Компактность: Упрощает передачу аргументов между функциями.
// Совместимость: Работает с заранее неизвестными аргументами.

// Пример использования для выполнения операций с неограниченным количеством чисел:
const sumAll = (...numbers) => { // numbers — это массив, содержащий все переданные аргументы.
  return numbers.reduce((sum, num) => sum + num, 0);
};

console.log(sumAll(1, 2, 3, 4)); // 10
console.log(sumAll(5, 10)); // 15

